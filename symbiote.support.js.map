{"version":3,"sources":["symbiote.support.js"],"names":["arid","require","burne","fname","leveld","mrkd","protype","raze","shft","truly","wauker","wichevr","xtrak","SYMBIOSIS","BLUEPRINT","INITIALIZE","symbiote","child","parent","Error","tree","arguments","length","filter","FUNCTION","STRING","map","pop","initializer","concat","blueprint","initialize","prototype","constructor","reverse","parameter","reduce","result","apply","error","stack","module","exports"],"mappings":"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","file":"symbiote.support.js","sourcesContent":["\"use strict\";\r\n\r\n/*;\r\n\t@module-license:\r\n\t\tThe MIT License (MIT)\r\n\t\t@mit-license\r\n\r\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\r\n\t\t@email: richeve.bebedor@gmail.com\r\n\r\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\r\n\t\tof this software and associated documentation files (the \"Software\"), to deal\r\n\t\tin the Software without restriction, including without limitation the rights\r\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\t\tcopies of the Software, and to permit persons to whom the Software is\r\n\t\tfurnished to do so, subject to the following conditions:\r\n\r\n\t\tThe above copyright notice and this permission notice shall be included in all\r\n\t\tcopies or substantial portions of the Software.\r\n\r\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\t\tSOFTWARE.\r\n\t@end-module-license\r\n\r\n\t@module-configuration:\r\n\t\t{\r\n\t\t\t\"package\": \"symbiote\",\r\n\t\t\t\"path\": \"symbiote/symbiote.js\",\r\n\t\t\t\"file\": \"symbiote.js\",\r\n\t\t\t\"module\": \"symbiote\",\r\n\t\t\t\"author\": \"Richeve S. Bebedor\",\r\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\r\n\t\t\t\"contributors\": [\r\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\",\r\n\t\t\t\t\"Vinse Vinalon <vinsevinalon@gmail.com>\"\r\n\t\t\t],\r\n\t\t\t\"repository\": \"https://github.com/volkovasystems/symbiote.git\",\r\n\t\t\t\"test\": \"symbiote-test.js\",\r\n\t\t\t\"global\": true\r\n\t\t}\r\n\t@end-module-configuration\r\n\r\n\t@module-documentation:\r\n\t\tAttach child initialization to parent initialization.\r\n\t@end-module-documentation\r\n\r\n\t@include:\r\n\t\t{\r\n\t\t\t\"arid\": \"arid\",\r\n\t\t\t\"burne\": \"burne\",\r\n\t\t\t\"fname\": \"fname\",\r\n\t\t\t\"leveld\": \"leveld\",\r\n\t\t\t\"mrkd\": \"mrkd\",\r\n\t\t\t\"protype\": \"protype\"\r\n\t\t\t\"raze\": \"raze\",\r\n\t\t\t\"shft\": \"shft\",\r\n\t\t\t\"truly\": \"truly\",\r\n\t\t\t\"wauker\": \"wauker\",\r\n\t\t\t\"wichevr\": \"wichevr\",\r\n\t\t\t\"xtrak\": \"xtrak\"\r\n\t\t}\r\n\t@end-include\r\n*/\r\n\r\nconst arid = require( \"arid\" );\r\nconst burne = require( \"burne\" );\r\nconst fname = require( \"fname\" );\r\nconst leveld = require( \"leveld\" );\r\nconst mrkd = require( \"mrkd\" );\r\nconst protype = require( \"protype\" );\r\nconst raze = require( \"raze\" );\r\nconst shft = require( \"shft\" );\r\nconst truly = require( \"truly\" );\r\nconst wauker = require( \"wauker\" );\r\nconst wichevr = require( \"wichevr\" );\r\nconst xtrak = require( \"xtrak\" );\r\n\r\nconst SYMBIOSIS = Symbol( \"symbiosis\" );\r\nconst BLUEPRINT = Symbol( \"blueprint\" );\r\nconst INITIALIZE = Symbol.for( \"initialize\" );\r\n\r\nconst symbiote = function symbiote( child, parent ){\r\n\t/*;\r\n\t\t@meta-configuration:\r\n\t\t\t{\r\n\t\t\t\t\"child:required\": \"function\",\r\n\t\t\t\t\"parent:required\": [\r\n\t\t\t\t\t\"function\",\r\n\t\t\t\t\t\"string\",\r\n\t\t\t\t\tArray,\r\n\t\t\t\t\t\"...\"\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t@end-meta-configuration\r\n\t*/\r\n\r\n\tif( typeof child != \"function\" ){\r\n\t\tthrow new Error( \"invalid child\" );\r\n\t}\r\n\r\n\tlet tree = wauker( child );\r\n\r\n\tif( arguments.length > 1 ){\r\n\t\tparent = leveld( shft( arguments ) )\r\n\t\t\t.filter( ( parent ) => protype( parent, FUNCTION, STRING ) )\r\n\t\t\t.map( ( parent ) => {\r\n\t\t\t\tif( typeof parent == \"function\" ){\r\n\t\t\t\t\treturn parent;\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn xtrak( tree, parent ).pop( );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t\t.filter( truly );\r\n\r\n\t}else{\r\n\t\tparent = shft( tree );\r\n\t}\r\n\r\n\t/*\r\n\t\t@note:\r\n\t\t\tIf there are no given parent then it will get the inheritance\r\n\t\t\t\ttree of the child and construct the initializer using that inheritance tree.\r\n\r\n\t\t\tThis is to ensure that we are using symbiosis properly.\r\n\t\t@end-note\r\n\t*/\r\n\tif( arid( parent ) ){\r\n\t\tparent = shft( tree );\r\n\t}\r\n\r\n\t/*;\r\n\t\t@note:\r\n\t\t\tThis will collect all non-symbiosis initialize method.\r\n\t\t@end-note\r\n\t*/\r\n\tlet initializer = [ child ].concat( parent )\r\n\t\t.map( ( blueprint ) => {\r\n\t\t\tlet initialize = wichevr( blueprint[ INITIALIZE ],\r\n\t\t\t\tblueprint.prototype.initialize,\r\n\t\t\t\tblueprint.prototype.constructor );\r\n\r\n\t\t\tif( !mrkd( SYMBIOSIS, initialize, true ) ){\r\n\t\t\t\t//: @note: Cache the initialize method.\r\n\t\t\t\tblueprint[ INITIALIZE ] = initialize;\r\n\r\n\t\t\t\t//: @note: Mark the initialize method what class it belongs.\r\n\t\t\t\tinitialize[ BLUEPRINT ] = fname( blueprint );\r\n\r\n\t\t\t\treturn initialize;\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.filter( truly )\r\n\t\t.reverse( );\r\n\r\n\tchild.prototype.initialize = function initialize( ){\r\n\t\tlet parameter = raze( arguments );\r\n\r\n\t\treturn initializer.reduce( ( result, initialize ) => {\r\n\t\t\ttry{\r\n\t\t\t\treturn initialize.apply( this, parameter );\r\n\r\n\t\t\t}catch( error ){\r\n\t\t\t\tthrow new Error( `failed initialize, ${ initialize[ BLUEPRINT ] }, ${ error.stack }` )\r\n\t\t\t}\r\n\t\t}, this );\r\n\t};\r\n\r\n\tburne( SYMBIOSIS, child.prototype.initialize );\r\n\r\n\treturn child;\r\n};\r\n\r\nmodule.exports = symbiote;\r\n"]}